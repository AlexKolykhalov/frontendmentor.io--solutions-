let e;var t=require("express"),r=require("path"),s=require("cookie-parser"),i=require("cors"),a=require("fs"),o=require("sequelize"),n=require("process"),c=require("cls-hooked"),u=require("crypto"),l=require("util"),d=require("jsonwebtoken"),h=require("express-validator"),g=require("ejs");function f(e){return e&&e.__esModule?e.default:e}var m={},y=r.resolve(__dirname,"../src/database/models","index.js"),w=r.resolve(__dirname,"../src/database/models");const p=c.createNamespace("ns"),k=r.basename(y),b=n.env.NODE_ENV||"development",v=require(w+"/../config/config.js")[b],I={};o.useCLS(p),e=v.use_env_variable?new o(n.env[v.use_env_variable],v):new o(v.database,v.username,v.password,v),a.readdirSync(w).filter(e=>0!==e.indexOf(".")&&e!==k&&".js"===e.slice(-3)&&-1===e.indexOf(".test.js")).forEach(t=>{let s=require(r.join(w,t))(e,o.DataTypes);I[s.name]=s}),Object.keys(I).forEach(e=>{I[e].associate&&I[e].associate(I)}),I.sequelize=e,I.Sequelize=o,m=I;class E{static async findLink(e){return await f(m).Link.findOne({attributes:["link_id","source","url"],where:{linkId:e}})}static async updateLink(e){return await f(m).Link.update(e,{where:{linkId:e.linkId}})}static async createLink(e,t){return await f(m).Link.create({source:e.source,url:e.url,linkId:e.linkId,userId:t})}static async deleteLink(e){return await f(m).Link.destroy({where:{linkId:e.linkId}})}}class R{static generateTokens(e){let t=process.env.SECRET_ACCESS_TOKEN,r=process.env.SECRET_REFRESH_TOKEN;if(!t||!r)throw Error("JWT_SECRET is not defined");return{access:f(d).sign(e,t,{expiresIn:"10m"}),refresh:f(d).sign(e,r,{expiresIn:"30m"})}}static verifyAccessToken(e){try{return f(d).verify(e,process.env.SECRET_ACCESS_TOKEN??"")}catch(e){return null}}static verifyRefreshToken(e){try{return f(d).verify(e,process.env.SECRET_REFRESH_TOKEN??"")}catch(e){return null}}static async findRefreshToken(e){return await f(m).UserToken.findOne({attributes:["token","userId"],where:{token:e}})}static async updateRefreshToken(e,t){return await f(m).UserToken.update({token:e,createdAt:new Date},{where:{token:t}})}static async createRefreshToken(e,t){return await f(m).UserToken.create({token:e,userId:t})}static async deleteRefreshToken(e){return await f(m).UserToken.destroy({where:{token:e}})}static async deleteRefreshTokens(){return await f(m).UserToken.destroy({where:{createdAt:{[o.Op.lt]:new Date(Date.parse(new Date().toISOString())-36e5)}}})}}class T{static async findByUserId(e){return await f(m).User.findOne({attributes:["userId","avatar","name","email"],include:[{model:f(m).Link,as:"links",attributes:["linkId","source","url"],required:!1}],where:{userId:e},order:[[{model:f(m).Link,as:"links"},"source","ASC"]]})}static async findByUserToken(e){let t=R.verifyRefreshToken(e)?.userId;return await this.findByUserId(t)}static async updateUser(e){return await f(m).sequelize.transaction(async()=>{if(0===await f(m).User.update(e,{where:{userId:e.userId}}))throw Error("Can't update a User");for(let t of e.links){let r=await E.findLink(t.linkId);r||await E.createLink(t,e.userId),r&&(t.source||t.url)&&await E.updateLink(t),!r||t.source||t.url||await E.deleteLink(t)}}),await this.findByUserId(e.userId)}static async createUser(){return await f(m).User.create()}static async deleteUser(){return await f(m).User.destroy()}}class C extends Error{constructor(e,t){super(e),this.status=t}static badRequest(e){return new C(e,400)}static unauthorized(e){return new C(e,401)}static notFound(e="Not found"){return new C(e,404)}static conflict(e){return new C(e,409)}}class _{static async login(e,t){let r=await _.#e(e);if(!r||!await _.#t(t,r.password))throw C.unauthorized("Email and Password don't match.");let s={userId:r.userId,email:r.email},i=R.generateTokens(s);return await R.createRefreshToken(i.refresh,s.userId),i}static async signup(e,t){let r={access:"",refresh:""};return await f(m).sequelize.transaction(async()=>{if(await _.#e(e))throw C.conflict("Registration could not be completed. If you have an account, please log in.");let s={userId:(await T.createUser()).userId,email:e};await _.#r(e,t,s.userId),r=R.generateTokens(s),await R.createRefreshToken(r.refresh,s.userId)}),r}static async refresh(e){let t=await T.findByUserToken(e);if(!t)throw C.unauthorized("User has been deleted");let r=R.generateTokens({userId:t.userId,email:t.email});return await R.updateRefreshToken(r.refresh,e),r}static async logout(e){await R.deleteRefreshToken(e)}static async #r(e,t,r){let s=await this.#s(t);await f(m).Authentication.create({email:e,password:s,userId:r})}static async #e(e){return await f(m).Authentication.findOne({where:{email:e}})}static async #s(e){let t=(0,u.randomBytes)(16).toString("hex"),r=(0,l.promisify)(u.scrypt),s=await r(e,t,64);return`${t}:${s.toString("hex")}`}static async #t(e,t){let[r,s]=t.split(":"),i=Buffer.from(s,"hex"),a=(0,l.promisify)(u.scrypt),o=await a(e,r,64);return(0,u.timingSafeEqual)(i,o)}}class q{static async login(e,t,r){try{let{email:r,password:s}=e.body,i=await _.login(r,s);return t.cookie("_t1",i.access),t.cookie("_t2",i.refresh,{httpOnly:!0,secure:"production"===process.env.NODE_ENV}),t.status(200).json("ok")}catch(e){r(e)}}static async signup(e,t,r){try{let{email:r,password:s}=e.body,i=await _.signup(r,s);return t.cookie("_t1",i.access),t.cookie("_t2",i.refresh,{httpOnly:!0,secure:"production"===process.env.NODE_ENV}),t.status(201).json("ok")}catch(e){r(e)}}static async refresh(e,t,r){try{let r=await _.refresh(e.cookies._t2);return t.cookie("_t1",r.access),t.cookie("_t2",r.refresh,{httpOnly:!0,secure:"production"===process.env.NODE_ENV}),t.status(200).json("ok")}catch(e){r(e)}}static logout(e,t,r){try{return t.clearCookie("_t1").clearCookie("_t2").status(200).json("ok")}catch(e){r(e)}}}const j=[(0,h.body)("email").trim().isEmail(),(e,t,r)=>{if(!(0,h.validationResult)(e).isEmpty())return r(C.badRequest("Invalid email."));r()}],O=[(0,h.body)("password").isLength({min:6,max:20}),(e,t,r)=>{if(!(0,h.validationResult)(e).isEmpty())return r(C.badRequest("Password must be from 6 to 20 symbols."));r()}],S=[(0,h.header)("Authorization").exists().withMessage("Authozition header is missing.").bail().custom(e=>e.startsWith("Bearer ")).withMessage("Authorization header must start with 'Bearer'.").bail().custom(e=>{let t=e.split(" ")[1],r=R.verifyAccessToken(t);if(null===r)throw Error("Access token expired");if(!r.userId)throw Error("Invalid access token");return!0}),(e,t,r)=>{let s=(0,h.validationResult)(e);if(console.log(`Access token validator errors: ${JSON.stringify(s.array(),null,2)}`),!s.isEmpty())return r(C.unauthorized(s.array()[0].msg));r()}],x=[(0,h.cookie)("_t2").exists().withMessage("Refresh token not found").bail().custom(async e=>{let t=R.verifyRefreshToken(e);return t?t.userId?await R.findRefreshToken(e)?Promise.resolve():Promise.reject("No refresh token"):Promise.reject("Invalid refresh token"):Promise.reject("Refresh token expired")}),(e,t,r)=>{let s=(0,h.validationResult)(e);if(console.log(`Refresh token validator errors: ${JSON.stringify(s.array(),null,2)}`),!s.isEmpty())return r(C.unauthorized(s.array()[0].msg));r()}],U=(0,t.Router)();function N(e){return f(g).compile((0,a.readFileSync)(f(r).resolve()+e,"utf-8"),{filename:f(r).resolve()+e})}function A(e){let t={};return"GitHub"===e&&(t.domain="https://github.com/",t.whiteIcon="icon-github.svg",t.grayIcon="icon-github-gray.svg",t.bgColor="bg-github",t.offset="10.8rem"),"LinkedIn"===e&&(t.domain="https://linkedin.com/",t.whiteIcon="icon-linkedin.svg",t.grayIcon="icon-linkedin-gray.svg",t.bgColor="bg-linkedin",t.offset="11.5rem"),"GitLab"===e&&(t.domain="https://gitlab.com/",t.whiteIcon="icon-gitlab.svg",t.grayIcon="icon-gitlab-gray.svg",t.bgColor="bg-gitlab",t.offset="10.4rem"),"StackOverflow"===e&&(t.domain="https://stackoverflow.com/",t.whiteIcon="icon-stack-overflow.svg",t.grayIcon="icon-stack-overflow-gray.svg",t.bgColor="bg-stackoverflow",t.offset="14.2rem"),"YouTube"===e&&(t.domain="https://youtube.com/",t.whiteIcon="icon-youtube.svg",t.grayIcon="icon-youtube-gray.svg",t.bgColor="bg-youtube",t.offset="11.6rem"),"Facebook"===e&&(t.domain="https://facebook.com/",t.whiteIcon="icon-facebook.svg",t.grayIcon="icon-facebook-gray.svg",t.bgColor="bg-facebook",t.offset="12.2rem"),"Twitch"===e&&(t.domain="https://twitch.tv/",t.whiteIcon="icon-twitch.svg",t.grayIcon="icon-twitch-gray.svg",t.bgColor="bg-twitch",t.offset="9.55rem"),"Twitter"===e&&(t.domain="https://x.com/",t.whiteIcon="icon-twitter.svg",t.grayIcon="icon-twitter-gray.svg",t.bgColor="bg-twitter",t.offset="8.4rem"),"Hashnode"===e&&(t.domain="https://hashnode.com/",t.whiteIcon="icon-hashnode.svg",t.grayIcon="icon-hashnode-gray.svg",t.bgColor="bg-hashnode",t.offset="12.45rem"),"Codepen"===e&&(t.domain="https://codepen.io/",t.whiteIcon="icon-codepen.svg",t.grayIcon="icon-codepen-gray.svg",t.bgColor="bg-codepen",t.offset="10.7rem"),"Devto"===e&&(t.domain="https://dev.to/",t.whiteIcon="icon-devto-gray.svg",t.grayIcon="icon-devto-gray.svg",t.bgColor="bg-devto",t.offset="8.35rem"),"Codewars"===e&&(t.domain="https://codewars.com/",t.whiteIcon="icon-codewars.svg",t.grayIcon="icon-codewars-gray.svg",t.bgColor="bg-codewars",t.offset="12.25rem"),"Freecodecamp"===e&&(t.domain="https://freecodecamp.org/",t.whiteIcon="icon-freecodecamp.svg",t.grayIcon="icon-freecodecamp-gray.svg",t.bgColor="bg-freecodecamp",t.offset="14.15rem"),"Frontend mentor"===e&&(t.domain="https://frontendmentor.io/",t.whiteIcon="icon-frontend-mentor.svg",t.grayIcon="icon-frontend-mentor-gray.svg",t.bgColor="bg-frontendmentor",t.offset="14.1rem"),t}U.post("/api/login",j,O,q.login),U.post("/api/signup",j,O,q.signup),U.get("/api/refresh",x,q.refresh),U.get("/api/logout",q.logout),U.get("/login",(e,t)=>{t.sendFile("html/login.html",{root:"public"})}),U.get("/signup",(e,t)=>{t.sendFile("html/signup.html",{root:"public"})});class L{static async update(e,t,r){try{let r=e.body,s=await T.updateUser(r);return t.status(200).json(s)}catch(e){r(e)}}static async renderIndex(e,t,r){try{let r=await T.findByUserToken(e.cookies._t2);if(!r)throw C.notFound();let s=r.links.map(e=>{let{domain:t,whiteIcon:r,grayIcon:s,bgColor:i,offset:a}=A(e.source);return{id:e.linkId,domain:t,whiteIcon:r,grayIcon:s,bgColor:i,offset:a,url:e.url,source:e.source}}),i=N("/public/templates/index.ejs")({user:r,links:s});return t.format({json:()=>t.json(r),html:()=>t.send(i)})}catch(e){r(e)}}static async renderProfile(e,t,r){try{let r=await T.findByUserId(e.params.userId);if(!r)throw C.notFound();let s=r.links.map(e=>{let{domain:t,whiteIcon:r,bgColor:s}=A(e.source);return{domain:t,whiteIcon:r,bgColor:s,url:e.url,source:e.source}}),i=N("/public/templates/profile.ejs")({user:r,userLinks:s});return t.format({json:()=>t.json(r),html:()=>t.send(i)})}catch(e){r(e)}}static async renderPreview(e,t,r){try{let r=await T.findByUserToken(e.cookies._t2);if(!r)throw C.notFound();let s=r.links.map(e=>{let{domain:t,whiteIcon:r,bgColor:s}=A(e.source);return{domain:t,whiteIcon:r,bgColor:s,url:e.url,source:e.source}}),i=N("/public/templates/preview.ejs")({user:r,userLinks:s});return t.format({json:()=>t.json(r),html:()=>t.send(i)})}catch(e){r(e)}}}const M=[(0,h.body)("avatar").exists().withMessage("Avatar is required"),(0,h.body)("email").exists().withMessage("Email is required").bail().optional({values:"falsy"}).isEmail().withMessage("Invalid email address"),(0,h.body)("links").exists().withMessage("Links is required").bail().isArray().withMessage("Links must be an array"),(0,h.body)("links.*.linkId").exists().withMessage("Each link must have a 'userId' field"),(0,h.body)("links.*.source").exists().withMessage("Each link must have a 'source' field"),(0,h.body)("links.*.url").exists().withMessage("Each link must have a 'url' field"),(0,h.body)("name").exists().withMessage("Name is required").bail().notEmpty().withMessage("Name is empty").bail().custom(e=>{if(e.trim().split(" ").length>2)throw Error("Name must contain only first and last name");if(!e.trim().split(" ")[1])throw Error("First/Last name is required");return!0}),(e,t,r)=>{let s=(0,h.validationResult)(e);if(console.log(`User data validator errors: ${JSON.stringify(s.array(),null,2)}`),!s.isEmpty())return r(C.badRequest(s.array()[0].msg));r()}],z=[(0,h.param)("userId").exists().withMessage("UserId is required").isUUID().withMessage("Invalid format of userId"),(e,t,r)=>{let s=(0,h.validationResult)(e);if(console.log(`UserId data validator errors: ${JSON.stringify(s.array(),null,2)}`),!s.isEmpty())return r(C.badRequest(s.array()[0].msg));r()}],F=(0,t.Router)();F.post("/api/user/update",S,M,L.update),F.get("/preview",x,L.renderPreview),F.get("/:userId",z,L.renderProfile),F.get("/",x,L.renderIndex);const B=[(0,h.header)("Authorization").exists().withMessage("Authozition header is missing.").bail().custom(e=>e.startsWith("Bearer ")).withMessage("Authorization header must start with 'Bearer'.").bail().custom(e=>{if(e.split(" ")[1]!==process.env.CRON_SECRET)throw Error("Invalid CRON secret");return!0}),(e,t,r)=>{let s=(0,h.validationResult)(e);if(console.log(`Cron secret validator errors: ${JSON.stringify(s.array(),null,2)}`),!s.isEmpty())return r(C.unauthorized(s.array()[0].msg));r()}],D=(0,t.Router)();D.get("/api/cron",B,async(e,t)=>{await R.deleteRefreshTokens(),t.status(200).json("ok")});const P=(0,t.Router)();P.use(U),P.use(D),P.use(F);const $=process.env.PORT,J=f(t)();J.use("/public",f(t).static("public")),J.use(f(t).json()),J.use(f(i)()),J.use(f(s)()),J.use(P),J.use((e,t,r,s)=>{let i=e.status||500;r.format({json(){r.status(i).json({status:i,message:e.message||"Internal Server Error"})},html(){if(400===i)return r.status(400).sendFile("html/400.html",{root:"public"});if(401===i)return r.status(401).redirect("/login");if(404===i)return r.status(404).sendFile("html/404.html",{root:"public"});let t=N("public/templates/500.ejs")({error:e.message});r.status(500).send(t)}})});try{J.listen($,()=>console.log(`Server (${process.env.NODE_ENV}) has been started at port: ${$}...`))}catch(e){console.error(e)}